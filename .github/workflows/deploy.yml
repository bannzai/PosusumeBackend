# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, feature/* ]

env:
  DEV_POSUSUME_DOCKER_IMAGE_BASE_PATH: ${{ secrets.DEV_POSUSUME_DOCKER_IMAGE_BASE_PATH }}
jobs:
  deploy-api:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, '[Skip CI]') }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.DEV_POSUSUME_GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.DEV_POSUSUME_GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
    - run: gcloud auth configure-docker --quiet
    - name: Deploy to Cloud Run
      env:
        DEV_POSUSUME_SERVICE_NAME: ${{ secrets.DEV_POSUSUME_SERVICE_NAME }}
        DEV_POSUSUME_API_PORT: ${{ secrets.DEV_POSUSUME_API_PORT}}
        DEV_POSUSUME_GCP_PROJECT_ID: ${{ secrets.DEV_POSUSUME_GCP_PROJECT_ID }}
        DEV_POSUSUME_GCP_REGION: ${{ secrets.DEV_POSUSUME_GCP_REGION }}
        FIREBASE_TOKEN: ${{ secrets.DEV_POSUSUME_FIREBASE_TOKEN }}
      run: npm run deploy:dev
      working-directory: packages/api
  deploy-functions:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, '[Skip CI]') }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: make secret
      env:
        POSUSUME_FIREBASE_RUN_COMMAND_FILE: ${{ secrets.DEV_POSUSUME_FIREBASE_RUN_COMMAND_FILE }}
    - run: yarn global add firebase-tools
    - run: yarn install
    - run: yarn workspaces run build
    - run: |
        firebase use development
        npm run deploy:dev
      env:
        FIREBASE_TOKEN: ${{ secrets.DEV_POSUSUME_FIREBASE_TOKEN }}
      working-directory: packages/functions
